{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/LoginViz/LoginViz.js","views/LoginView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","LoginViz","useState","email","setEmail","password","setPassword","dispatch","useDispatch","onSubmit","e","preventDefault","authOperations","logIn","alert","type","name","onChange","target","className","LoginView"],"mappings":";6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,+EIDvF,SAASC,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAiBjB,OACE,oCACE,4CACA,uBAAMC,SAXW,SAAAC,GACnBA,EAAEC,iBACGR,GAAUE,EAIfE,EAASK,IAAeC,MAAM,CAAEV,QAAOE,cAHrCS,MAAM,8BAQN,UACE,4CAEE,uBACEC,KAAK,QACLC,KAAK,QACLpB,MAAOO,EACPc,SAzBU,SAAAP,GAClBN,EAASM,EAAEQ,OAAOtB,aA2Bd,8CAEE,uBACEmB,KAAK,WACLC,KAAK,WACLpB,MAAOS,EACPY,SA/Ba,SAAAP,GACrBJ,EAAYI,EAAEQ,OAAOtB,aAiCjB,wBAAQmB,KAAK,SAASI,UAAU,UAAhC,yBCvCOC,UANG,kBAChB,mCACE,cAACnB,EAAD","file":"static/js/4.75933a86.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState } from 'react'; //!\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../../redux/auth';\r\n\r\nexport default function LoginViz() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const updateEmail = e => {\r\n    setEmail(e.target.value);\r\n  };\r\n  const updatePassword = e => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleSumbit = e => {\r\n    e.preventDefault();\r\n    if (!email || !password) {\r\n      alert('Please fill in all fields');\r\n      return;\r\n    }\r\n    dispatch(authOperations.logIn({ email, password }));\r\n  };\r\n  return (\r\n    <section>\r\n      <h1>Login page</h1>\r\n      <form onSubmit={handleSumbit}>\r\n        <label>\r\n          E-mail:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={updateEmail}\r\n          />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={updatePassword}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className=\"formBtn\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\n// class LoginViz extends Component {\r\n//   state = {\r\n//     email: '',\r\n//     password: '',\r\n//   };\r\n\r\n//   handleChange = ({ target: { name, value } }) => {\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSumbit = e => {\r\n//     e.preventDefault();\r\n//     this.props.onLogin(this.state);\r\n//     this.setState({ name: '', email: '', password: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { email, password } = this.state;\r\n//     return (\r\n//       <section>\r\n//         <h1>Login page</h1>\r\n//         <form onSubmit={this.handleSumbit}>\r\n//           <label>\r\n//             E-mail:\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               value={email}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n//           <label>\r\n//             Password:\r\n//             <input\r\n//               type=\"password\"\r\n//               name=\"password\"\r\n//               value={password}\r\n//               onChange={this.handleChange}\r\n//             />\r\n//           </label>\r\n//           <button type=\"submit\" className=\"formBtn\">\r\n//             Login\r\n//           </button>\r\n//         </form>\r\n//       </section>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// const mapDispatchToProps = {\r\n//   onLogin: authOperations.logIn,\r\n// };\r\n\r\n// export default connect(null, mapDispatchToProps)(LoginViz);\r\n","import LoginViz from '../components/LoginViz';\r\nconst LoginView = () => (\r\n  <>\r\n    <LoginViz />\r\n  </>\r\n);\r\n\r\nexport default LoginView;\r\n"],"sourceRoot":""}