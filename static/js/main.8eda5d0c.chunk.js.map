{"version":3,"sources":["redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","redux/phonebook/phonebook-reducer.js","components/Container/Container.module.css","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/Container/Container.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/store.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js"],"names":["getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","getContacts","dispatch","axios","get","then","data","catch","error","message","addContact","name","number","contact","id","nanoid","post","deleteContact","delete","getAllContacts","state","items","contacts","getFilter","filter","getLoading","loading","getFilteredContacts","createSelector","lowerName","toLowerCase","includes","createReducer","_","payload","combineReducers","module","exports","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isAuthenticated","useSelector","authSelectors","getIsAuthenticated","to","exact","style","activeStyle","container","alignItems","marginRight","UserMenu","useDispatch","getUserName","onLogout","useCallback","authOperations","logOut","className","type","onClick","class","AuthNav","header","justifyContent","borderBottom","AppBar","Container","children","s","PrivateRoute","Component","component","redirectTo","routeProps","render","props","PublicRoute","restricted","HomeView","lazy","ContactsView","RegisterView","LoginView","App","useEffect","getCurrentUser","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","authActions","response","logIn","getState","persistedToken","initialUserState","email","user","setError"],"mappings":"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","file":"static/js/main.8eda5d0c.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contact/getContactsRequest');\r\nexport const getContactsSuccess = createAction('contact/getContactsSuccess');\r\nexport const getContactsError = createAction('contact/getContactsError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');\r\n","import axios from 'axios';\r\nimport { nanoid } from 'nanoid';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\n// axios.defaults.baseURL = `http://localhost:4040`;\r\n\r\nconst getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(error => dispatch(getContactsError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n  const contact = { id: nanoid(), name, number };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  getContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.items.loading;\nconst getAllContacts = state => state.items.contacts;\nconst getFilter = state => state.items.filter;\n\nconst getFilteredContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const lowerName = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(lowerName),\n    );\n  },\n);\n\nexport default {\n  getLoading,\n  getAllContacts,\n  getFilter,\n  getFilteredContacts,\n};\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from './phonebook-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3EpPK\"};","import React from 'react'; //!\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Home\r\n      </NavLink>\r\n      {isAuthenticated && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Contacts\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n\r\n// const Navigation = ({ isAuthenticated }) => (\r\n//   <nav>\r\n//     <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n//       Home\r\n//     </NavLink>\r\n//     {isAuthenticated && (\r\n//       <NavLink\r\n//         to=\"/contacts\"\r\n//         exact\r\n//         style={styles.link}\r\n//         activeStyle={styles.activeLink}\r\n//       >\r\n//         Contacts\r\n//       </NavLink>\r\n//     )}\r\n//   </nav>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(Navigation);\r\n","import React, { useCallback } from 'react'; //!\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/auth';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n  return (\r\n    <div style={styles.container}>\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <button className=\"outBtn\" type=\"button\" onClick={onLogout}>\r\n        <span class=\"material-icons outlined\">logout</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'; //!\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#E84A5F',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Login\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from 'react'; //!\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\n// const AppBar = ({ isAuthenticated }) => (\r\n//   <header style={styles.header}>\r\n//     <Navigation />\r\n//     {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n//   </header>\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(AppBar);\r\n","import React from 'react';\r\nimport s from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.Container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react'; //!\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={redirectTo} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\n// const PrivateRoute = ({\r\n//   component: Component,\r\n//   isAuthenticated,\r\n//   redirectTo,\r\n//   ...routeProps\r\n// }) => (\r\n//   <Route\r\n//     {...routeProps}\r\n//     render={props =>\r\n//       isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n//     }\r\n//   />\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PrivateRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nexport default function PublicRoute({\r\n  component: Component,\r\n  redirectTo,\r\n  ...routeProps\r\n}) {\r\n  const isAuthenticated = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthenticated && routeProps.restricted ? (\r\n          <Redirect to={redirectTo} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\n// const PublicRoute = ({\r\n//   component: Component,\r\n//   isAuthenticated,\r\n//   redirectTo,\r\n//   ...routeProps\r\n// }) => (\r\n//   <Route\r\n//     {...routeProps}\r\n//     render={props =>\r\n//       isAuthenticated && routeProps.restricted ? (\r\n//         <Redirect to={redirectTo} />\r\n//       ) : (\r\n//         <Component {...props} />\r\n//       )\r\n//     }\r\n//   />\r\n// );\r\n\r\n// const mapStateToProps = state => ({\r\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n// });\r\n\r\n// export default connect(mapStateToProps)(PublicRoute);\r\n","import React, { useEffect, Suspense, lazy } from 'react'; //!\nimport { Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport AppBar from './components/AppBar';\nimport Container from './components/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <AppBar />\n      <Suspense fallback={<h1 className=\"Load\">Loading...</h1>}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomeView} />\n          <PublicRoute\n            path=\"/register\"\n            restricted\n            component={RegisterView}\n            redirectTo=\"/contacts\"\n          />\n          <PublicRoute\n            path=\"/login\"\n            restricted\n            component={LoginView}\n            redirectTo=\"/contacts\"\n          />\n          <PrivateRoute\n            path=\"/contacts\"\n            component={ContactsView}\n            redirectTo=\"/login\"\n          />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onGetCurrentUser();\n//   }\n//   render() {\n//     return (\n//       <Container>\n//         <AppBar />\n//         <Suspense fallback={<h1 className=\"Load\">Loading...</h1>}>\n//           <Switch>\n//             <PublicRoute exact path=\"/\" component={HomeView} />\n//             <PublicRoute\n//               path=\"/register\"\n//               restricted\n//               component={RegisterView}\n//               redirectTo=\"/contacts\"\n//             />\n//             <PublicRoute\n//               path=\"/login\"\n//               restricted\n//               component={LoginView}\n//               redirectTo=\"/contacts\"\n//             />\n//             <PrivateRoute\n//               path=\"/contacts\"\n//               component={ContactsView}\n//               redirectTo=\"/login\"\n//             />\n//           </Switch>\n//         </Suspense>\n//       </Container>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n// export default connect(null, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { contactsReducer } from './phonebook';\r\nimport { authReducer } from './auth';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    items: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit'; //!\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\n// axios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async dispatch => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n"],"sourceRoot":""}